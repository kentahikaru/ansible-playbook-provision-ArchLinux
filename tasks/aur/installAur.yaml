---
- name: Make direcotry for aur installation
  file:
    path: "{{ ansible_user_dir }}/aur"
    state: directory
    mode: 0744

- name: Download and extract PKGBUILD
  unarchive:
    src: https://aur.archlinux.org/cgit/aur.git/snapshot/aurutils.tar.gz
    dest: "{{ ansible_user_dir }}/aur/"
    remote_src: true

- name: Read PKGBUILD
  slurp:
    src: "{{ ansible_user_dir }}/aur/aurutils/PKGBUILD"
  register: pkgbuild

- name: Get package version
  set_fact:
    pkgver: "{{ pkgbuild['content'] | b64decode | regex_findall('pkgver=[0-9][0-9].[0-9]') }}"

- name: Get package version
  set_fact:
    pkgver: "{{ pkgver | regex_findall('[0-9][0-9].[0-9]') }}"

- name: Debug
  debug:
    var: pkgver

- name: Get release number
  set_fact:
    pkgrel: "{{ pkgbuild['content'] | b64decode | regex_findall('pkgrel=[0-9]') }}"

- name: Get release number
  set_fact:
    pkgrel: "{{ pkgrel | regex_findall('[0-9]') }}"

- name: Debug
  debug:
    var: pkgrel

- name: Get depedencies
  set_fact:
    deps: "{{ pkgbuild['content'] | b64decode | regex_findall('\\ndepends=(.*?)\\)') }}"

- name: Debug
  debug:
    var: deps

- name: Get depedencies
  set_fact:
    deps: "{{ deps | regex_findall('\\w+') }}"

- name: Debug
  debug:
    var: deps

- name: "Install depedencies"
  become: true
  pacman:
    name: "{{ item }}"
    state: present
  loop: "{{ deps }}"  

- name: Get directory content
  stat:
    path: "{{ ansible_user_dir }}/aur/aurutils/aurutils-{{ pkgver[0] }}-{{ pkgrel[0] }}-any.pkg.tar.zst"
  register: pkgstate

- name: Build package
  command: makepkg
  args:
    chdir: "{{ ansible_user_dir }}/aur/aurutils"
  when: not pkgstate.stat.exists

- name: Is aur installed?
  stat:
    path: /usr/bin/aur
  register: aurstate

- name: Install package
  become: true
  pacman:
    name: "{{ ansible_user_dir }}/aur/aurutils/aurutils-{{ pkgver[0] }}-{{ pkgrel[0] }}-any.pkg.tar.zst"
    # extra_args: "-U"
    state: present
  when: not aurstate.stat.exists

- name: Clean package
  command: makepkg -f --clean
  args:
    chdir: "{{ ansible_user_dir }}/aur/aurutils"
  when: not aurstate.stat.exists
