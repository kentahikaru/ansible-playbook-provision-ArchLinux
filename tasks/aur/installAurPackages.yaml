---
- name: Debug
  ansible.builtin.debug:
    var: package

- name: "Get depedencies for {{ package }}"
  ansible.builtin.command: "aur depends -a {{ package }}"
  register: aur_packages_depedencies
  changed_when: false

- name: Debug dependencies
  ansible.builtin.debug:
    var: aur_packages_depedencies.stdout_lines

- name: Filter out depedencies
  ansible.builtin.set_fact:
    filtered_depedencies: "{{ aur_packages_depedencies.stdout_lines | map('split', '\t') | map('last') | list }}"

- name: Debug filtered depedencies
  ansible.builtin.debug:
    var: filtered_depedencies

- name: Reject package from list of depedencies
  ansible.builtin.set_fact:
    filtered_rejected_dependencies: "{{ filtered_depedencies | reject('equalto', package) | list }}"

- name: Debug filtered and rejected depedencies
  ansible.builtin.debug:
    var: filtered_rejected_dependencies

- name: Install depedencies except last one, which is AUR package itself
  become: true
  community.general.pacman:
    name: "{{ item_aur | split(\"\t\") | last }}"
  loop: "{{ filtered_rejected_dependencies }}"
  loop_control:
    loop_var: item_aur

- name: "Sync package {{ package }}"
  become: true
  become_user: "{{ aurutils_user }}"
  ansible.builtin.shell: "aur sync -C --noview {{ package }}"
  args:
    executable: /bin/bash
  changed_when: true

- name: "Install package {{ package }}"
  become: true
  community.general.pacman:
    name: "{{ package }}"
    state: present
    update_cache: true
