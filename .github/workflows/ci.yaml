---
name: CI
'on':
  pull_request:
  push:
    branches:
      - main
      - ghactions
  # schedule:
  #   - cron: "0 0 * * 5"

jobs:

  # lint:
  #   name: Lint
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Check out the codebase.
  #       uses: actions/checkout@v2

  #     - name: Set up Python 3.
  #       uses: actions/setup-python@v2
  #       with:
  #         python-version: '3.x'

  #     - name: Install test dependencies.
  #       run: pip3 install yamllint ansible-lint

  #     - name: Lint code.
  #       run: |
  #         yamllint .
  #         ansible-lint

  vagrant:
    name: Vagrant
    runs-on: macos-latest
    steps:
      - name: Set up Python 3.
        uses: actions/setup-python@v2
        with:
          python-version: '3.x'

      - name: Install homebrew?
        run: sudo mkdir homebrew && curl -L https://github.com/Homebrew/brew/tarball/master | tar xz --strip 1 -C homebrew

      - name: Install test dependencies.
        run: pip3 install ansible passlib

      - name: Check out the codebase.
        uses: actions/checkout@v2

      # - uses: leleliu008/github-actions-vagrant@v1
      - name: Run github action - vagrant
        # uses: ./.github/actions
        uses: kentahikaru/github-action-vagrant--vagrantfile-from-repository@v1
        with:
          run: |
            echo "Hello from action"

      - name: Get roles
        run: ansible-galaxy install -r requirements.yaml

      - name: Add key fingerprint to known_hosts but don't login
        run: ssh-keyscan -H 172.16.3.22 >> ~/.ssh/known_hosts

      - name: backup fstab
        run: ansible -i inventory iosim -a "sudo cp /etc/fstab /etc/fstab.bkp"

      - name: Run 1. playbook
        run: ansible-playbook 1-setup_system.yaml --extra-vars '{"uid_guid":"1050"}' --extra-vars "variable_host=iosim" --extra-vars "as_user_add_to_sudoers_no_password=true"

      - name: restore fstab
        run: ansible -i inventory iosim -a "sudo cp /etc/fstab.bkp /etc/fstab"

      - name: create .ssh dir
        run: ansible -i inventory iosim -a "sudo mkdir -p /home/sandi/.ssh"

      - name: Copy authorized_keys to user
        run: ansible -i inventory iosim -a "sudo cp /home/vagrant/.ssh/authorized_keys /home/sandi/.ssh/"

      - name: Change owner of authorized keys
        run: ansible -i inventory iosim -a "sudo chown sandi:sandi /home/sandi/.ssh/authorized_keys"

      - name: Run 2nd test
        run: ansible-playbook 2-setup_aur.yaml --extra-vars '{"uid_guid":"1050"}' --extra-vars "variable_host=iosim" --extra-vars "ansible_ssh_user=sandi" --extra-vars "ansible_become_pass=sandi"

      - name: Run 3rd test
        run: ansible-playbook 3-install_aur_packages.yaml --extra-vars '{"uid_guid":"1050"}' --extra-vars "variable_host=iosim" --extra-vars "ansible_ssh_user=sandi" --extra-vars "ansible_become_pass=sandi"

      - name: Setup autologin to xorg
        run: ansible-playbook testing/setup_autologin_to_xorg.yaml --extra-vars "ansible_ssh_user=sandi" --extra-vars "ansible_become_pass=sandi"

      - name: Show uuid
        run: VBoxManage list runningvms

      - name: Reboot
        run: ansible-playbook testing/reboot.yaml

      - name: Get running box UUID
        run: UUID=$(VBoxManage list runningvms | awk '//{print $2}' |  sed --expression='s/{//g' |  sed --expression='s/}//g')

      - name: Make screenshot
        run: VBoxManage controlvm $UUID screenshotpng screenshot.png

      - uses: actions/upload-artifact@v2
        with:
          name: screenshot.png
          path: screenshot.png

      - name: Run 4rd test
        run: ansible-playbook 4-setup_xfce.yaml --extra-vars '{"uid_guid":"1050"}' --extra-vars "variable_host=iosim" --extra-vars "ansible_ssh_user=sandi" --extra-vars "ansible_become_pass=sandi"

      - name: Reboot
        run: ansible-playbook testing/reboot.yaml